# coding: utf-8

"""
    Twitter API v2

    Twitter API v2 available endpoints  # noqa: E501

    The version of the OpenAPI document: 2.49
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import twitter
from twitter.models.user import User  # noqa: E501
from twitter.rest import ApiException

class TestUser(unittest.TestCase):
    """User unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test User
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = twitter.models.user.User()  # noqa: E501
        if include_optional :
            return User(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                description = '', 
                entities = twitter.models.user_entities.User_entities(
                    description = twitter.models.full_text_entities.FullTextEntities(
                        annotations = [
                            null
                            ], 
                        cashtags = [
                            null
                            ], 
                        hashtags = [
                            null
                            ], 
                        mentions = [
                            null
                            ], 
                        urls = [
                            null
                            ], ), 
                    url = twitter.models.user_entities_url.User_entities_url(), ), 
                id = '2244994945', 
                location = '', 
                name = '', 
                pinned_tweet_id = '1346889436626259968', 
                profile_image_url = '', 
                protected = True, 
                public_metrics = twitter.models.user_public_metrics.User_public_metrics(
                    followers_count = 56, 
                    following_count = 56, 
                    listed_count = 56, 
                    tweet_count = 56, ), 
                url = '', 
                username = 'HqXzyC', 
                verified = True, 
                withheld = twitter.models.user_withheld.UserWithheld(
                    country_codes = [
                        'US'
                        ], 
                    scope = 'user', )
            )
        else :
            return User(
                id = '2244994945',
                name = '',
                username = 'HqXzyC',
        )

    def testUser(self):
        """Test User"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
