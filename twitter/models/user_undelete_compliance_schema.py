# coding: utf-8

"""
    Twitter API v2

    Twitter API v2 available endpoints  # noqa: E501

    The version of the OpenAPI document: 2.49
    Generated by: https://openapi-generator.tech
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel
from twitter.models import UserComplianceSchema
from pydantic import ValidationError

class UserUndeleteComplianceSchema(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    user_undelete: UserComplianceSchema = ...

    class Config:
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.to_dict())

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> UserUndeleteComplianceSchema:
        """Create an instance of UserUndeleteComplianceSchema from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of user_undelete
        if self.user_undelete:
            _dict['user_undelete'] = self.user_undelete.to_dict()

        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> UserUndeleteComplianceSchema:
        """Create an instance of UserUndeleteComplianceSchema from a dict"""
        if type(obj) is not dict:
            return UserUndeleteComplianceSchema.parse_obj(obj)

        return UserUndeleteComplianceSchema.parse_obj({
            "user_undelete": UserComplianceSchema.from_dict(obj.get("user_undelete"))
        })


